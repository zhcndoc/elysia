import{F as e,_ as t,p as n,te as r,u as i,v as a}from"./chunks/runtime-core.esm-bundler.D02XvB7A.js";import{t as o}from"./chunks/Layout.CgtC_9GJ.js";const s=JSON.parse(`{"title":"为 Elysia 推出 OpenAPI 类型生成器","description":"Elysia 现支持 OpenAPI 类型生成器，这是一个强大的工具，可以自动从你的 Elysia 路由和类型生成 OpenAPI 文档，无需任何手动注解。","frontmatter":{"title":"为 Elysia 推出 OpenAPI 类型生成器","sidebar":false,"editLink":false,"search":false,"head":[["meta",{"property":"og:title","content":"为 Elysia 推出 OpenAPI 类型生成器"}],["meta",{"name":"description","content":"Elysia 现支持 OpenAPI 类型生成器，这是一个强大的工具，可以自动从你的 Elysia 路由和类型生成 OpenAPI 文档，无需任何手动注解。"}],["meta",{"property":"og:description","content":"Elysia 现支持 OpenAPI 类型生成器，这是一个强大的工具，可以自动从你的 Elysia 路由和类型生成 OpenAPI 文档，无需任何手动注解。"}],["meta",{"property":"og:image","content":"https://elysiajs.com/blog/openapi-type-gen/cover.webp"}],["meta",{"property":"twitter:image","content":"https://elysiajs.com/blog/openapi-type-gen/cover.webp"}]]},"headers":[],"relativePath":"blog/openapi-type-gen.md","filePath":"blog/openapi-type-gen.md","lastUpdated":1758208104000}`);var c=Object.assign({name:`blog/openapi-type-gen.md`},{setup(s){return(s,c)=>(e(),n(`div`,null,[a(o,{title:`为 Elysia 推出 OpenAPI 类型生成器`,src:`/blog/openapi-type-gen/cover.webp`,alt:`OpenAPI 类型生成器：Elysia 的自动 API 文档`,author:`saltyaom`,date:`2025年9月4日`},{default:r(()=>c[0]||=[i(`p`,null,`OpenAPI 是用于记录 RESTful API 的注释标准。`,-1),i(`p`,null,`它提供了一种描述 API 结构和行为的标准方式，使开发者更容易理解和使用这些接口。`,-1),i(`p`,null,`如今大多数网络框架通常需要大量手动注释和努力才能创建 API 文档，这既繁琐又容易出错。Elysia 拥有对 OpenAPI 的卓越支持，采用自有的 schema 既可以用于数据验证、类型推断，也可作为 OpenAPI 注解的唯一可信来源。`,-1),i(`p`,null,`Elysia 还提供了可交互的文档展示，使用 Scalar 或 Swagger UI，只需一行代码即可通过 OpenAPI 插件实现。`,-1),i(`img`,{src:`/blog/openapi-type-gen/scalar-preview-light.webp`,alt:`Scalar 预览`,class:`border border-gray-100`},null,-1),i(`blockquote`,null,[i(`p`,null,`Elysia 运行的 Scalar UI，来自 Elysia OpenAPI 插件`)],-1),i(`p`,null,`即使拥有如此卓越的体验，我们仍希望更进一步。`,-1),i(`p`,null,[t(`今天，我们很高兴地宣布发布 `),i(`strong`,null,`OpenAPI 类型生成器`),t(`，它能从你的 Elysia 服务器自动生成 OpenAPI 文档，无需任何手动注解。`)],-1),i(`h2`,{id:`openapi-类型生成器`,tabindex:`-1`},[t(`OpenAPI 类型生成器 `),i(`a`,{class:`header-anchor`,href:`#openapi-类型生成器`,"aria-label":`Permalink to “OpenAPI 类型生成器”`},`​`)],-1),i(`p`,null,[t(`只需 `),i(`strong`,null,`一行代码`),t(`，你现在就可以无需任何手动 schema 注解，从你的 Elysia 服务器生成 OpenAPI 文档。`)],-1),i(`p`,null,[i(`img`,{src:`/blog/openapi-type-gen/type-gen.webp`,alt:`Elysia 类型生成器`,"data-zoomable":`true`})],-1),i(`blockquote`,null,[i(`p`,null,`Elysia 会自动将引用的响应体类型生成响应 schema，列出所有可能的响应状态码，无需手动 schema 注解。`)],-1),i(`p`,null,`让你只需一行代码就拥有完整且准确的 API 文档，无需手动注解。`,-1),i(`p`,null,`类型生成通过分析你的 Elysia 实例类型来生成相应的 OpenAPI 文档，这得益于 Elysia 对强类型安全性和完整性的投入。`,-1),i(`p`,null,`它能与现有的 Elysia 代码库和 schema 定义协同工作，无需任何破坏性变更或额外配置（如类型转换工具 Typia），并优先使用已有的 schema 定义，缺失时才回退到从类型推断。`,-1),i(`p`,null,[i(`img`,{src:`/blog/openapi-type-gen/drizzle-typegen.webp`,alt:`使用 Drizzle 和类型生成器 Elysia 类型生成器`,"data-zoomable":`true`})],-1),i(`blockquote`,null,[i(`p`,null,`从 Elysia 路由处理器返回的 Drizzle 查询结果会自动推断为 OpenAPI schema。`)],-1),i(`p`,null,[t(`它还兼容来自现代库如 `),i(`strong`,null,`Drizzle`),t(`、Prisma 的复杂类型，只需从路由处理器返回对应值即可。`)],-1),i(`h2`,{id:`采用-openapi-类型生成器`,tabindex:`-1`},[t(`采用 OpenAPI 类型生成器 `),i(`a`,{class:`header-anchor`,href:`#采用-openapi-类型生成器`,"aria-label":`Permalink to “采用 OpenAPI 类型生成器”`},`​`)],-1),i(`p`,null,`要在你的代码中使用此功能，只需：`,-1),i(`ol`,null,[i(`li`,null,`导出一个 Elysia 实例`),i(`li`,null,`提供类型生成器的文件路径`)],-1),i(`div`,{class:`language-ts`},[i(`button`,{title:`Copy Code`,class:`copy`}),i(`span`,{class:`lang`},`ts`),i(`pre`,{class:`shiki shiki-themes github-light github-dark has-diff`,style:{"--shiki-light":`#24292e`,"--shiki-dark":`#e1e4e8`,"--shiki-light-bg":`#fff`,"--shiki-dark-bg":`#24292e`},tabindex:`0`,dir:`ltr`},[i(`code`,null,[i(`span`,{class:`line`},[i(`span`,{style:{"--shiki-light":`#D73A49`,"--shiki-dark":`#F97583`}},`import`),i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},` { Elysia } `),i(`span`,{style:{"--shiki-light":`#D73A49`,"--shiki-dark":`#F97583`}},`from`),i(`span`,{style:{"--shiki-light":`#032F62`,"--shiki-dark":`#9ECBFF`}},` 'elysia'`)]),t(`
`),i(`span`,{class:`line`},[i(`span`,{style:{"--shiki-light":`#D73A49`,"--shiki-dark":`#F97583`}},`import`),i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},` { openapi } `),i(`span`,{style:{"--shiki-light":`#D73A49`,"--shiki-dark":`#F97583`}},`from`),i(`span`,{style:{"--shiki-light":`#032F62`,"--shiki-dark":`#9ECBFF`}},` '@elysiajs/openapi'`)]),t(`
`),i(`span`,{class:`line diff add`},[i(`span`,{style:{"--shiki-light":`#D73A49`,"--shiki-dark":`#F97583`}},`import`),i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},` { fromTypes } `),i(`span`,{style:{"--shiki-light":`#D73A49`,"--shiki-dark":`#F97583`}},`from`),i(`span`,{style:{"--shiki-light":`#032F62`,"--shiki-dark":`#9ECBFF`}},` '@elysiajs/openapi/gen'`)]),t(`
`),i(`span`,{class:`line`}),t(`
`),i(`span`,{class:`line diff add`},[i(`span`,{style:{"--shiki-light":`#D73A49`,"--shiki-dark":`#F97583`}},`export`),i(`span`,{style:{"--shiki-light":`#D73A49`,"--shiki-dark":`#F97583`}},` const`),i(`span`,{style:{"--shiki-light":`#005CC5`,"--shiki-dark":`#79B8FF`}},` app`),i(`span`,{style:{"--shiki-light":`#D73A49`,"--shiki-dark":`#F97583`}},` =`),i(`span`,{style:{"--shiki-light":`#D73A49`,"--shiki-dark":`#F97583`}},` new`),i(`span`,{style:{"--shiki-light":`#6F42C1`,"--shiki-dark":`#B392F0`}},` Elysia`),i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},`() `)]),t(`
`),i(`span`,{class:`line`},[i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},`	.`),i(`span`,{style:{"--shiki-light":`#6F42C1`,"--shiki-dark":`#B392F0`}},`use`),i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},`(`)]),t(`
`),i(`span`,{class:`line`},[i(`span`,{style:{"--shiki-light":`#6F42C1`,"--shiki-dark":`#B392F0`}},`		openapi`),i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},`({`)]),t(`
`),i(`span`,{class:`line diff add`},[i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},`			references: `),i(`span`,{style:{"--shiki-light":`#6F42C1`,"--shiki-dark":`#B392F0`}},`fromTypes`),i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},`(`),i(`span`,{style:{"--shiki-light":`#032F62`,"--shiki-dark":`#9ECBFF`}},`'src/index.ts'`),i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},`) `)]),t(`
`),i(`span`,{class:`line`},[i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},`		})`)]),t(`
`),i(`span`,{class:`line`},[i(`span`,{style:{"--shiki-light":`#24292E`,"--shiki-dark":`#E1E4E8`}},`	)`)])])])],-1),i(`p`,null,`Elysia 类型生成器会自动分析你的 Elysia 实例，并实时生成 OpenAPI 文档。`,-1),i(`p`,null,[t(`关于 OpenAPI 类型生成器的文档，详见 `),i(`a`,{href:`/patterns/openapi.html#openapi-from-types`},`模式：OpenAPI`),t(`。`)],-1),i(`hr`,null,null,-1),i(`h3`,{id:`我们相信此功能为-elysia-独有`,tabindex:`-1`},[t(`我们相信此功能为 Elysia 独有 `),i(`a`,{class:`header-anchor`,href:`#我们相信此功能为-elysia-独有`,"aria-label":`Permalink to “我们相信此功能为 Elysia 独有”`},`​`)],-1),i(`p`,null,`多数网络框架（不仅限 JavaScript 生态）创建高质量 API 文档时需要大量手动注解，且难以维护。Elysia 开箱即用，提供完整且准确的 API 文档。`,-1),i(`p`,null,[t(`这得益于 `),i(`strong`,null,`Elysia 对端到端类型安全性的出色支持`),t(`。`)],-1),i(`p`,null,`我们期待看到它如何帮助你用最小的精力构建和维护高质量 API 文档。`,-1),i(`p`,null,[t(`你可以今天就通过升级 `),i(`code`,null,`@elysiajs/openapi`),t(` 至最新版，或从 `),i(`a`,{href:`https://github.com/saltyaom/elysia-typegen-example`,target:`_blank`,rel:`noreferrer`},`GitHub 仓库`),t(` 体验我们的示例配置来尝试此功能。`)],-1)]),_:1,__:[0]})]))}});export{s as __pageData,c as default};