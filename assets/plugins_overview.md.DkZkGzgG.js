import{F as e,g as t,p as n}from"./chunks/runtime-core.esm-bundler.D02XvB7A.js";import{t as r}from"./chunks/plugin-vue_export-helper.By5GbASF.js";const i=JSON.parse(`{"title":"插件概述 - ElysiaJS","description":"Elysia 旨在实现模块化和轻量化，这就是为什么 Elysia 包含了涉及常见模式的预构建插件，以方便开发者使用。Elysia 通过社区插件进一步增强，使其更加个性化。","frontmatter":{"title":"插件概述 - ElysiaJS","head":[["meta",{"property":"og:title","content":"插件概述 - ElysiaJS"}],["meta",{"name":"description","content":"Elysia 旨在实现模块化和轻量化，这就是为什么 Elysia 包含了涉及常见模式的预构建插件，以方便开发者使用。Elysia 通过社区插件进一步增强，使其更加个性化。"}],["meta",{"name":"og:description","content":"Elysia 旨在实现模块化和轻量化，这就是为什么 Elysia 包含了涉及常见模式的预构建插件，以方便开发者使用。Elysia 通过社区插件进一步增强，使其更加个性化。"}]]},"headers":[],"relativePath":"plugins/overview.md","filePath":"plugins/overview.md","lastUpdated":1758208104000}`);var a={name:`plugins/overview.md`};function o(r,i,a,o,s,c){return e(),n(`div`,null,i[0]||=[t(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /plugins/overview.md for this page in Markdown format</div><h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to “概述”">​</a></h1><p>Elysia 旨在实现模块化和轻量化。</p><p>遵循与 Arch Linux 相同的理念（顺便说一句，我使用 Arch）：</p><blockquote><p>设计决策通过开发者共识逐案作出</p></blockquote><p>这确保了开发者最终得到他们所希望创建的高性能 Web 服务器。由此，Elysia 包含了预构建的常见模式插件，以方便开发者使用：</p><h2 id="官方插件" tabindex="-1">官方插件： <a class="header-anchor" href="#官方插件" aria-label="Permalink to “官方插件：”">​</a></h2><ul><li><a href="/plugins/bearer.html">Bearer</a> - 自动获取 <a href="https://swagger.io/docs/specification/authentication/bearer-authentication/" target="_blank" rel="noreferrer">Bearer</a> 令牌</li><li><a href="/plugins/cors.html">CORS</a> - 设置 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS" target="_blank" rel="noreferrer">跨域资源共享 (CORS)</a></li><li><a href="/plugins/cron.html">Cron</a> - 设置 <a href="https://en.wikipedia.org/wiki/Cron" target="_blank" rel="noreferrer">cron</a> 任务</li><li><a href="/eden/overview.html">Eden</a> - Elysia 的端到端类型安全客户端</li><li><a href="/plugins/graphql-apollo.html">GraphQL Apollo</a> - 在 Elysia 上运行 <a href="https://www.apollographql.com/" target="_blank" rel="noreferrer">Apollo GraphQL</a></li><li><a href="/plugins/graphql-yoga.html">GraphQL Yoga</a> - 在 Elysia 上运行 <a href="https://github.com/dotansimha/graphql-yoga" target="_blank" rel="noreferrer">GraphQL Yoga</a></li><li><a href="/plugins/html.html">HTML</a> - 处理 HTML 响应</li><li><a href="/plugins/jwt.html">JWT</a> - 使用 <a href="https://jwt.io/" target="_blank" rel="noreferrer">JWTs</a> 进行身份验证</li><li><a href="/plugins/openapi.html">OpenAPI</a> - 生成 <a href="https://swagger.io/specification/" target="_blank" rel="noreferrer">OpenAPI</a> 文档</li><li><a href="/plugins/opentelemetry.html">OpenTelemetry</a> - 添加 OpenTelemetry 支持</li><li><a href="/plugins/server-timing.html">Server Timing</a> - 使用 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing" target="_blank" rel="noreferrer">Server-Timing API</a> 审计性能瓶颈</li><li><a href="/plugins/static.html">Static</a> - 提供静态文件/文件夹服务</li><li><a href="/plugins/stream.html">Stream</a> - 集成响应流和 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events" target="_blank" rel="noreferrer">服务器发送事件 (SSEs)</a></li><li><a href="/patterns/websocket.html">WebSocket</a> - 支持 <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket" target="_blank" rel="noreferrer">WebSockets</a></li></ul><h2 id="社区插件" tabindex="-1">社区插件： <a class="header-anchor" href="#社区插件" aria-label="Permalink to “社区插件：”">​</a></h2><ul><li><a href="https://github.com/kravetsone/create-elysiajs" target="_blank" rel="noreferrer">Create ElysiaJS</a> - 轻松搭建您的 Elysia 项目环境（支持 ORM、代码规范和插件）！</li><li><a href="https://github.com/pilcrowOnPaper/lucia" target="_blank" rel="noreferrer">Lucia Auth</a> - 简洁的身份验证</li><li><a href="https://github.com/wobsoriano/elysia-clerk" target="_blank" rel="noreferrer">Elysia Clerk</a> - 非官方 Clerk 身份验证插件</li><li><a href="https://github.com/bogeychan/elysia-polyfills" target="_blank" rel="noreferrer">Elysia Polyfills</a> - 在 Node.js 和 Deno 上运行 Elysia 生态系统</li><li><a href="https://github.com/kravetsone/elysia-vite-server" target="_blank" rel="noreferrer">Vite server</a> - 启动并装饰 <code>vite</code> 开发服务器的插件，在“开发”模式下运行，在“生产”模式下提供静态文件（如果需要）</li><li><a href="https://github.com/timnghg/elysia-vite" target="_blank" rel="noreferrer">Vite</a> - 提供注入了 Vite 脚本的入口 HTML 文件</li><li><a href="https://github.com/trylovetom/elysiajs-nuxt" target="_blank" rel="noreferrer">Nuxt</a> - 轻松将 Elysia 与 Nuxt 集成！</li><li><a href="https://github.com/kravetsone/elysia-remix" target="_blank" rel="noreferrer">Remix</a> - 使用支持 <code>HMR</code> 的 <a href="https://remix.run/" target="_blank" rel="noreferrer">Remix</a>（由 <a href="https://vitejs.dev/" target="_blank" rel="noreferrer"><code>vite</code></a> 提供支持）！解决了一个长期请求的插件<a href="https://github.com/elysiajs/elysia/issues/12" target="_blank" rel="noreferrer">#12</a></li><li><a href="https://github.com/johnny-woodtke/elysiajs-sync" target="_blank" rel="noreferrer">Sync</a> - 由 <a href="https://dexie.org/" target="_blank" rel="noreferrer">Dexie.js</a> 驱动的轻量级离线优先数据同步框架</li><li><a href="https://github.com/kravetsone/elysia-connect-middleware" target="_blank" rel="noreferrer">Connect middleware</a> - 允许你直接在 Elysia 中使用 <a href="https://www.npmjs.com/package/express" target="_blank" rel="noreferrer"><code>express</code></a>/<a href="https://www.npmjs.com/package/connect" target="_blank" rel="noreferrer"><code>connect</code></a> 中间件的插件！</li><li><a href="https://github.com/codev911/elysia-http-exception" target="_blank" rel="noreferrer">Elysia HTTP Exception</a> - Elysia 插件，用于处理 HTTP 4xx/5xx 错误，提供结构化异常类</li><li><a href="https://github.com/DevTobias/elysia-helmet" target="_blank" rel="noreferrer">Elysia Helmet</a> - 通过各种 HTTP 头保护 Elysia 应用安全</li><li><a href="https://github.com/timnghg/elysia-vite-plugin-ssr" target="_blank" rel="noreferrer">Vite Plugin SSR</a> - 基于 Elysia 服务器的 Vite SSR 插件</li><li><a href="https://github.com/kravetsone/elysia-oauth2" target="_blank" rel="noreferrer">OAuth 2.0</a> - 支持超过 <strong>42</strong> 个提供者并具备 <strong>类型安全</strong> 的 <a href="https://en.wikipedia.org/wiki/OAuth" target="_blank" rel="noreferrer">OAuth 2.0</a> 授权流程插件！</li><li><a href="https://github.com/bogeychan/elysia-oauth2" target="_blank" rel="noreferrer">OAuth2</a> - 处理 OAuth 2.0 授权代码流程</li><li><a href="https://github.com/ap-1/elysia-oauth2-resource-server" target="_blank" rel="noreferrer">OAuth2 Resource Server</a> - 通过 JWKS 端点验证 OAuth2 提供者的 JWT 令牌的插件，支持验证发行者、受众和权限</li><li><a href="https://github.com/macropygia/elysia-openid-client" target="_blank" rel="noreferrer">Elysia OpenID Client</a> - 基于 <a href="https://github.com/panva/node-openid-client" target="_blank" rel="noreferrer">openid-client</a> 的 OpenID 客户端</li><li><a href="https://github.com/rayriffy/elysia-rate-limit" target="_blank" rel="noreferrer">Rate Limit</a> - 简单轻量的速率限制器</li><li><a href="https://github.com/tristanisham/logysia" target="_blank" rel="noreferrer">Logysia</a> - 经典日志中间件</li><li><a href="https://github.com/cybercoder-naj/logestic" target="_blank" rel="noreferrer">Logestic</a> - 为 ElysiaJS 设计的高级且可定制的日志库</li><li><a href="https://github.com/bogeychan/elysia-logger" target="_blank" rel="noreferrer">Logger</a> - 基于 <a href="https://github.com/pinojs/pino" target="_blank" rel="noreferrer">pino</a> 的日志中间件</li><li><a href="https://github.com/eajr/elylog" target="_blank" rel="noreferrer">Elylog</a> - 简易的标准输出日志库，支持一定的自定义</li><li><a href="https://github.com/0xrasla/logify" target="_blank" rel="noreferrer">Logify for Elysia.js</a> - 为 Elysia.js 应用提供美观、快速且类型安全的日志中间件</li><li><a href="https://github.com/tanishqmanuja/nice-logger" target="_blank" rel="noreferrer">Nice Logger</a> - 不是最漂亮，但非常不错和简洁的 Elysia 日志器</li><li><a href="https://github.com/johnny-woodtke/elysiajs-sentry" target="_blank" rel="noreferrer">Sentry</a> - 使用 <a href="https://docs.sentry.io/" target="_blank" rel="noreferrer">Sentry</a> 捕获跟踪和错误的插件</li><li><a href="https://github.com/TotalTechGeek/elysia-lambda" target="_blank" rel="noreferrer">Elysia Lambda</a> - 在 AWS Lambda 上部署</li><li><a href="https://github.com/gaurishhs/elysia-decorators" target="_blank" rel="noreferrer">Decorators</a> - 使用 TypeScript 装饰器</li><li><a href="https://github.com/kravetsone/elysia-autoload" target="_blank" rel="noreferrer">Autoload</a> - 基于目录结构的文件系统路由器，支持为 <a href="https://elysiajs.com/eden/overview.html" target="_blank" rel="noreferrer">Eden</a> 生成类型，且支持 <a href="https://github.com/kravetsone/elysia-autoload?tab=readme-ov-file#bun-build-usage" target="_blank" rel="noreferrer"><code>Bun.build</code></a></li><li><a href="https://github.com/kravetsone/elysia-msgpack" target="_blank" rel="noreferrer">Msgpack</a> - 支持操作 <a href="https://msgpack.org" target="_blank" rel="noreferrer">MessagePack</a></li><li><a href="https://github.com/kravetsone/elysia-xml" target="_blank" rel="noreferrer">XML</a> - 支持处理 XML</li><li><a href="https://github.com/wobsoriano/elysia-autoroutes" target="_blank" rel="noreferrer">Autoroutes</a> - 文件系统路由</li><li><a href="https://github.com/itsyoboieltr/elysia-group-router" target="_blank" rel="noreferrer">Group Router</a> - 基于文件夹的分组路由器</li><li><a href="https://github.com/itsyoboieltr/elysia-basic-auth" target="_blank" rel="noreferrer">Basic Auth</a> - 基础 HTTP 认证</li><li><a href="https://github.com/bogeychan/elysia-etag" target="_blank" rel="noreferrer">ETag</a> - 自动生成 HTTP <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag" target="_blank" rel="noreferrer">ETag</a></li><li><a href="https://github.com/johnny-woodtke/elysiajs-cdn-cache" target="_blank" rel="noreferrer">CDN Cache</a> - Elysia 的 Cache-Control 插件 - 无需手动设置 HTTP 头</li><li><a href="https://github.com/eelkevdbos/elysia-basic-auth" target="_blank" rel="noreferrer">Basic Auth</a> - 基础 HTTP 认证（使用 <code>request</code> 事件）</li><li><a href="https://github.com/eelkevdbos/elysia-i18next" target="_blank" rel="noreferrer">i18n</a> - 基于 <a href="https://www.i18next.com/" target="_blank" rel="noreferrer">i18next</a> 的本地化封装</li><li><a href="https://github.com/gtramontina/elysia-requestid" target="_blank" rel="noreferrer">Elysia Request ID</a> - 添加/转发请求 ID（<code>X-Request-ID</code> 或自定义）</li><li><a href="https://github.com/gtramontina/elysia-htmx" target="_blank" rel="noreferrer">Elysia HTMX</a> - 提供针对 <a href="https://htmx.org/" target="_blank" rel="noreferrer">HTMX</a> 的上下文辅助</li><li><a href="https://github.com/gtrabanco/elysia-hmr-html" target="_blank" rel="noreferrer">Elysia HMR HTML</a> - 在目录中任意文件变更时重新加载 HTML 文件</li><li><a href="https://github.com/gtrabanco/elysia-inject-html" target="_blank" rel="noreferrer">Elysia Inject HTML</a> - 向 HTML 文件注入 HTML 代码</li><li><a href="https://github.com/yfrans/elysia-http-error" target="_blank" rel="noreferrer">Elysia HTTP Error</a> - 从 Elysia 处理程序返回 HTTP 错误</li><li><a href="https://github.com/sylvain12/elysia-http-status-code" target="_blank" rel="noreferrer">Elysia Http Status Code</a> - 集成 HTTP 状态码</li><li><a href="https://github.com/gaurishhs/elysia-nocache" target="_blank" rel="noreferrer">NoCache</a> - 禁用缓存</li><li><a href="https://github.com/gtramontina/elysia-tailwind" target="_blank" rel="noreferrer">Elysia Tailwind</a> - 在插件中编译 <a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">Tailwindcss</a></li><li><a href="https://github.com/gusb3ll/elysia-compression" target="_blank" rel="noreferrer">Elysia Compression</a> - 压缩响应</li><li><a href="https://github.com/gaurishhs/elysia-ip" target="_blank" rel="noreferrer">Elysia IP</a> - 获取 IP 地址</li><li><a href="https://github.com/myazarc/elysia-oauth2-server" target="_blank" rel="noreferrer">OAuth2 Server</a> - 使用 Elysia 开发 OAuth2 服务器</li><li><a href="https://github.com/gtramontina/elysia-flash-messages" target="_blank" rel="noreferrer">Elysia Flash Messages</a> - 启用闪存消息</li><li><a href="https://github.com/gtramontina/elysia-authkit" target="_blank" rel="noreferrer">Elysia AuthKit</a> - 非官方 <a href="https://www.authkit.com/" target="_blank" rel="noreferrer">WorkOS 的 AuthKit</a> 认证支持</li><li><a href="https://github.com/gtramontina/elysia-error-handler" target="_blank" rel="noreferrer">Elysia Error Handler</a> - 更简洁的错误处理</li><li><a href="https://github.com/yolk-oss/elysia-env" target="_blank" rel="noreferrer">Elysia env</a> - 使用 typebox 的类型安全环境变量</li><li><a href="https://github.com/Edsol/elysia-drizzle-schema" target="_blank" rel="noreferrer">Elysia Drizzle Schema</a> - 帮助在 Elysia OpenAPI 模型中使用 Drizzle ORM 模式</li><li><a href="https://github.com/qlaffont/unify-elysia" target="_blank" rel="noreferrer">Unify-Elysia</a> - 统一 Elysia 的错误代码</li><li><a href="https://github.com/qlaffont/unify-elysia-gql" target="_blank" rel="noreferrer">Unify-Elysia-GQL</a> - 统一 Elysia GraphQL 服务器（Yoga &amp; Apollo）的错误代码</li><li><a href="https://github.com/qlaffont/elysia-auth-drizzle" target="_blank" rel="noreferrer">Elysia Auth Drizzle</a> - 使用 JWT（Header/Cookie/QueryParam）处理身份验证的库</li><li><a href="https://github.com/qlaffont/graceful-server-elysia" target="_blank" rel="noreferrer">graceful-server-elysia</a> - 受 <a href="https://github.com/gquittet/graceful-server" target="_blank" rel="noreferrer">graceful-server</a> 启发的库</li><li><a href="https://github.com/PunGrumpy/logixlysia" target="_blank" rel="noreferrer">Logixlysia</a> - 带颜色和时间戳的美观简洁的 ElysiaJS 日志中间件</li><li><a href="https://github.com/vitorpldev/elysia-fault" target="_blank" rel="noreferrer">Elysia Fault</a> - 简单且可定制的错误处理中间件，支持自定义 HTTP 错误</li><li><a href="https://github.com/vermaysha/elysia-compress" target="_blank" rel="noreferrer">Elysia Compress</a> - 受 <a href="https://github.com/fastify/fastify-compress" target="_blank" rel="noreferrer">@fastify/compress</a> 启发的 ElysiaJS 响应压缩插件</li><li><a href="https://github.com/labzzhq/compressor/" target="_blank" rel="noreferrer">@labzzhq/compressor</a> - 适用于 Elysia 和 Bunnyhop 的 HTTP 压缩器，支持 gzip、deflate 和 brotli</li><li><a href="https://github.com/morigs/elysia-accepts" target="_blank" rel="noreferrer">Elysia Accepts</a> - 用于解析 Accept 头和内容协商的 Elysia 插件</li><li><a href="https://github.com/chneau/elysia-compression" target="_blank" rel="noreferrer">Elysia Compression</a> - 用于压缩响应的 Elysia 插件</li><li><a href="https://github.com/chneau/elysia-logger" target="_blank" rel="noreferrer">Elysia Logger</a> - 受 <a href="https://hono.dev/docs/middleware/builtin/logger" target="_blank" rel="noreferrer">hono/logger</a> 启发的 Elysia HTTP 请求和响应日志插件</li><li><a href="https://github.com/jassix/elysia-cqrs" target="_blank" rel="noreferrer">Elysia CQRS</a> - 适用于 CQRS 模式的 Elysia 插件</li><li><a href="https://github.com/mastermakrela/elysia-supabase" target="_blank" rel="noreferrer">Elysia Supabase</a> - 无缝集成 <a href="https://supabase.com/" target="_blank" rel="noreferrer">Supabase</a> 身份验证和数据库功能，轻松访问认证用户数据和 Supabase 客户端实例，特别适用于 <a href="https://supabase.com/docs/guides/functions" target="_blank" rel="noreferrer">边缘函数</a></li><li><a href="https://www.npmjs.com/package/elysia-xss" target="_blank" rel="noreferrer">Elysia XSS</a> - 为 Elysia.js 提供的 XSS（跨站脚本攻击）防护插件，通过清理请求体数据实现</li><li><a href="https://www.npmjs.com/package/elysiajs-helmet" target="_blank" rel="noreferrer">Elysiajs Helmet</a> - 为 Elysia.js 应用提供的全面安全中间件，设置多种 HTTP 头以增强安全性</li><li><a href="https://github.com/Ateeb-Khan-97/better-elysia" target="_blank" rel="noreferrer">Decorators for Elysia.js</a> - 通过这个小型库无缝开发并集成 API、Websocket 和流式 API</li><li><a href="https://github.com/ilyhalight/elysia-protobuf" target="_blank" rel="noreferrer">Elysia Protobuf</a> - 支持 Elysia 的 protobuf</li><li><a href="https://github.com/m1handr/elysia-prometheus" target="_blank" rel="noreferrer">Elysia Prometheus</a> - 用于暴露 Prometheus HTTP 指标的 Elysia 插件</li><li><a href="https://github.com/rayriffy/elysia-remote-dts" target="_blank" rel="noreferrer">Elysia Remote DTS</a> - 为 Eden Treaty 提供远程 .d.ts 类型的插件</li><li><a href="https://capjs.js.org/guide/middleware/elysia.html" target="_blank" rel="noreferrer">Cap Checkpoint plugin for Elysia</a> - 类似 Cloudflare 的 Cap 中间件，一个基于 SHA-256 PoW 设计的轻量级现代开源 CAPTCHA 替代方案</li><li><a href="https://github.com/staciax/elysia-background" target="_blank" rel="noreferrer">Elysia Background</a> - Elysia.js 的后台任务处理插件</li><li><a href="https://github.com/fedify-dev/fedify/tree/main/packages/elysia" target="_blank" rel="noreferrer">@fedify/elysia</a> - 与 <a href="https://fedify.dev/" target="_blank" rel="noreferrer">Fedify</a>（ActivityPub 服务器框架）无缝集成的插件</li></ul><h2 id="相关项目" tabindex="-1">相关项目： <a class="header-anchor" href="#相关项目" aria-label="Permalink to “相关项目：”">​</a></h2><ul><li><a href="https://github.com/m1212e/prismabox" target="_blank" rel="noreferrer">prismabox</a> - 基于您的数据库模型生成 typebox 模式的生成器，适用于 Elysia</li></ul><hr><p>如果您为 Elysia 编写了一个插件，请随时通过 <strong>点击下面的 <i>在 GitHub 上编辑此页面</i></strong> 将您的插件添加到列表中 👇</p>`,14)])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};